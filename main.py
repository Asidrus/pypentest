import socket
from datetime import datetime

from IPy import IP
import asyncio

ipaddress = "80.87.192.66"


def _test():
    now = datetime.now()
    status = asyncio.run(main2())
    print(status)
    print(datetime.now()-now)


def gen():
    yield from [i for i in range(50)]


async def main2():
    status = {}
    for port in gen():
        try:
            reader, writer = await asyncio.wait_for(asyncio.open_connection(ipaddress, port), timeout=0.5)
            writer.close()
            status[port] = True
        except asyncio.TimeoutError:
            status[port] = False
        except ConnectionRefusedError:
            status[port] = False
    return status


async def main():
    status = {}
    for i in range(1, 50):
        try:
            reader, writer = await asyncio.wait_for(asyncio.open_connection(ipaddress, await gen()), timeout=0.5)
            writer.close()
            status[i] = True
        except asyncio.TimeoutError:
            status[i] = False
        except ConnectionRefusedError:
            status[i] = False
    return status


if __name__ == '__main__':
    # now = datetime.now()
    # status = {}
    # for i in range(1, 50):
    #     try:
    #         sock = socket.socket()
    #         sock.settimeout(0.5)
    #         sock.connect((ipaddress, i))
    #         status[i] = True
    #     except:
    #         status[i] = False
    # print(status)
    # print(datetime.now()-now)
    _test()